[{"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/index.js":"1","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/App.js":"2","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/Navbar.js":"3","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/ReviewedBooks.js":"4","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/pages/SearchBooks.js":"5","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/pages/SavedBooks.js":"6","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/SignupForm.js":"7","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/LoginForm.js":"8","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/queries.js":"9","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/mutations.js":"10","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/auth.js":"11","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/localStorage.js":"12","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/API.js":"13"},{"size":265,"mtime":1631042450541,"results":"14","hashOfConfig":"15"},{"size":1249,"mtime":1631069550840,"results":"16","hashOfConfig":"15"},{"size":2695,"mtime":1631291611862,"results":"17","hashOfConfig":"15"},{"size":2231,"mtime":1631369745220,"results":"18","hashOfConfig":"15"},{"size":4829,"mtime":1631290442644,"results":"19","hashOfConfig":"15"},{"size":3627,"mtime":1631370199234,"results":"20","hashOfConfig":"15"},{"size":3289,"mtime":1631044195644,"results":"21","hashOfConfig":"15"},{"size":2482,"mtime":1631043578928,"results":"22","hashOfConfig":"15"},{"size":1146,"mtime":1631325397582,"results":"23","hashOfConfig":"15"},{"size":1659,"mtime":1631324424726,"results":"24","hashOfConfig":"15"},{"size":1233,"mtime":1631042198508,"results":"25","hashOfConfig":"15"},{"size":850,"mtime":1631042222234,"results":"26","hashOfConfig":"15"},{"size":1501,"mtime":1631042112426,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"497h7g",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/index.js",[],["58","59"],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/App.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/Navbar.js",["60"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\nimport ReviewedBooks from './ReviewedBooks';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            MERN Your Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link as={Link} to='/ReviewedBooks'>\n                    Reviewed Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/ReviewedBooks.js",["61","62","63","64","65","66","67","68","69"],"import React, { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { ADD_REVIEW } from '../utils/mutations';\nimport { QUERY_REVIEWS, QUERY_ME } from '../utils/queries';\n\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst ReviewedBooks = () => {\n  const [reviewText, setReviewText] = useState('');\n  const { loading, data} = useQuery(QUERY_REVIEWS);\n  const reviewData = data?.reviews || [];\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addReview, { error }] = useMutation(ADD_REVIEW, {\n    update(cache, { data: { addReview } }) {\n      try {\n        const { reviews } = cache.readQuery({ query: QUERY_REVIEWS });\n\n        cache.writeQuery({\n          query: QUERY_REVIEWS,\n          data: { reviews: [addReview, ...reviews] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, review: [...me.reviews, addReview] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addReview({\n        variables: {\n          reviewText,\n          reviewAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setReviewText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'reviewText' && value.length <= 280) {\n      setReviewText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your take on this book?</h3>\n\n      \n\n          {\n            loading?\"still loading...\":reviewData.map(review => {\n              return (\n                <div class=\"reviewSection\">\n                  <h7>{review.book}</h7>\n                  <h8>      {review.reviewText}</h8>\n                  <h9>      -{review.reviewAuthor}</h9>\n                </div>\n              )\n            })\n          }\n\n\n\n    </div>\n  );\n};\n\nexport default ReviewedBooks;","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/pages/SearchBooks.js",["70","71","72"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nimport { SAVE_BOOK } from '../utils/mutations';\nimport {useMutation} from '@apollo/react-hooks';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, {error}] = useMutation(SAVE_BOOK );\n\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n \n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      // const response = await saveBook(bookToSave, token);\n      const {data} = await saveBook({\n        variables: { input: bookToSave }\n      });\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;","/Users/nabihakhan/Documents/Code/mern-your-books/client/src/pages/SavedBooks.js",["73","74","75","76","77","78","79","80"],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/SignupForm.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/components/LoginForm.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/queries.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/mutations.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/auth.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/localStorage.js",[],"/Users/nabihakhan/Documents/Code/mern-your-books/client/src/utils/API.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":21},{"ruleId":"85","severity":1,"message":"89","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":3,"column":16,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"91","line":3,"column":24,"nodeType":"87","messageId":"88","endLine":3,"endColumn":29},{"ruleId":"85","severity":1,"message":"92","line":8,"column":10,"nodeType":"87","messageId":"88","endLine":8,"endColumn":20},{"ruleId":"85","severity":1,"message":"93","line":17,"column":10,"nodeType":"87","messageId":"88","endLine":17,"endColumn":24},{"ruleId":"85","severity":1,"message":"94","line":19,"column":23,"nodeType":"87","messageId":"88","endLine":19,"endColumn":28},{"ruleId":"85","severity":1,"message":"95","line":41,"column":9,"nodeType":"87","messageId":"88","endLine":41,"endColumn":25},{"ruleId":"85","severity":1,"message":"96","line":45,"column":15,"nodeType":"87","messageId":"88","endLine":45,"endColumn":19},{"ruleId":"85","severity":1,"message":"97","line":58,"column":9,"nodeType":"87","messageId":"88","endLine":58,"endColumn":21},{"ruleId":"85","severity":1,"message":"98","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":18},{"ruleId":"85","severity":1,"message":"94","line":20,"column":21,"nodeType":"87","messageId":"88","endLine":20,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":77,"column":14,"nodeType":"87","messageId":"88","endLine":77,"endColumn":18},{"ruleId":"85","severity":1,"message":"99","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"100","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":15},{"ruleId":"85","severity":1,"message":"101","line":4,"column":17,"nodeType":"87","messageId":"88","endLine":4,"endColumn":27},{"ruleId":"85","severity":1,"message":"94","line":16,"column":23,"nodeType":"87","messageId":"88","endLine":16,"endColumn":28},{"ruleId":"85","severity":1,"message":"102","line":17,"column":23,"nodeType":"87","messageId":"88","endLine":17,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":32,"column":14,"nodeType":"87","messageId":"88","endLine":32,"endColumn":18},{"ruleId":"85","severity":1,"message":"96","line":48,"column":15,"nodeType":"87","messageId":"88","endLine":48,"endColumn":19},{"ruleId":"85","severity":1,"message":"103","line":58,"column":9,"nodeType":"87","messageId":"88","endLine":58,"endColumn":25},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'ReviewedBooks' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'LOGIN_USER' is defined but never used.","'characterCount' is assigned a value but never used.","'error' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'data' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'saveBook' is defined but never used.","'useEffect' is defined but never used.","'getMe' is defined but never used.","'deleteBook' is defined but never used.","'err' is assigned a value but never used.","'handleReviewBook' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]